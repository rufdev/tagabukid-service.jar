import com.rameses.annotations.*;
import com.rameses.util.*;
import java.rmi.server.*;
import com.rameses.common.*
import com.rameses.services.extended.*

class TagabukidPurchaseStockRequestService extends ActiveCrudListService {

	@ActiveDB(value='purchasestockrequest', em='tagabukid_peedmo')
	def em;

	@Service("SequenceService") 
	def seqSvc;

	@Service("DateService") 
	def dateSvc;

	@Env
	def env;

	@ProxyMethod
	public def getNodes( def o ) {
		return [
			[state:'OPEN', caption:'Open' ],
			[state:'CLOSED', caption:'Closed' ]
		];
	}

	@ProxyMethod
	public def getColumns( def o ) {
		return[
			[name:'reqno', caption:'Req No' ],
			[name:'dtfiled', caption:'Date Filed' ],
			[name:'requester.name', caption:'Requester'],
			[name:'state', caption:'State' ],
		];
	}
	
	public void beforeList(o) {
		// o.filter = '''AND r.reqtype IN ('INVENTORY')  '''
		o.filter = '''AND 1=1  '''
	} 

	void beforeCreate( def o ) {
		o.requester = [objid:env.USERID, name:env.FULLNAME, title:env.JOBTITLE];
		o.reqno = "PSR" + seqSvc.getNextFormattedSeries("PSR");
		o.dtfiled = dateSvc.serverDate;
		o.state = "OPEN";
		o.reqtype = 'INVENTORY'
	}
	
	void afterCreate( o ) {
		o.items.each {
			it.objid = "STKPROD"+new UID();
			it.parentid = o.objid;

			em.create( it, "item" );
		}
	}

	// //use this to open the file
	// void afterList(o,list) {
	// 	list.each {
	// 		it._filetype = "stockrequest:"+it.reqtype.toLowerCase();
	// 	}
	// }

	//use to display handler per each item
	void afterOpen( o ) {
		o.items = em.getItems(o);
		o.createdbyid= o.requester.objid
	    o.createdbyname= o.requester.name
		o.items.each {
			
		}
	}

	@ProxyMethod 
	void deleteRequest(o) {
		em.deleteRequest(o)
	}


}
