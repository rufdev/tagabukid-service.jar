import com.rameses.annotations.*
import com.rameses.common.*;
import com.rameses.services.extended.*;
import java.rmi.server.UID

class RPTReportAccomplishmentBukService
{
	@ActiveDB('tagabukid-rptreport')
    def em

    @Service('Var')
    def var 

    @Service('RPTUtil')
    def util

    
    @Service('LGUService')
    def lguSvc 


	@ProxyMethod
	public Map generateAccomplishment(params) {
		def title 		= 'QUARTERLY ACCOMPLISHMENT REPORT ON REAL PROPERTY ASSESSMENTS'
		def period 		= 'FOR THE ' + util.getQuarterName( params.qtr ) + ' OF ' + params.year 
		def periodtype 	= 'QUARTER'

		if( params.month && params.month.index > 0 ) {
			title = 'MONTHLY ACCOMPLISHMENT REPORT ON REAL PROPERTY ASSESSMENTS'
			period = 'FOR THE MONTH OF ' + util.getMonthName( params.month.index ) + ', ' + params.year 
			periodtype = 'MONTH' 
		}
		
		params.lguid = var.lgu_objid
		params.currenttimestamp		= util.calculateCurrentTimeStamp( params.year, params.qtr, params.month?.month )
		params.endingtimestamp 		= util.calculateEndingTimeStamp( params.year, params.qtr, params.month?.month )

		if (params.asofdate) params.currenttimestamp = '%'
		def taxableinfo = [[
			name						: 'TAXABLE',
			noofrpus					: null,
			landareasqm					: null,
			totallandmv					: null,
			totalbldgmvgt175			: null,
			totalbldgmvlt175			: null,
			totalmachmv					: null,
			totalothermv				: null,
			totalmv						: null,
			totallandav					: null,
			totalbldgav					: null,
			totalmachav					: null,
			totalotherav				: null,
			totalav						: null,
			restrictioncarp				: null,
			restrictionulitigation		: null,
			restrictionother			: null,
			totalnetavwithrestriction	: null,
			collectiblebasic			: null,
			collectiblesef				: null,
		]]
		
		def taxable = em.getFormNo3Taxable(params)
				
		taxable.add([
			name						: 'TOTAL TAXABLE PROPERTIES',
			noofrpus					: util.sum(taxable, 'noofrpus'),
			landareasqm					: util.sum(taxable, 'landareasqm'),
			totallandmv					: util.sum(taxable, 'totallandmv'),
			totalbldgmvgt175			: util.sum(taxable, 'totalbldgmvgt175'),
			totalbldgmvlt175			: util.sum(taxable, 'totalbldgmvlt175'),
			totalmachmv					: util.sum(taxable, 'totalmachmv'),
			totalothermv				: util.sum(taxable, 'totalothermv'),
			totalmv						: util.sum(taxable, 'totalmv'),
			totallandav					: util.sum(taxable, 'totallandav'),
			totalbldgav					: util.sum(taxable, 'totalbldgav'),
			totalmachav					: util.sum(taxable, 'totalmachav'),
			totalotherav				: util.sum(taxable, 'totalotherav'),
			totalav						: util.sum(taxable, 'totalav'),
			restrictioncarp				: util.sum(taxable, 'restrictioncarp'),
			restrictionulitigation		: util.sum(taxable, 'restrictionulitigation'),
			restrictionother			: util.sum(taxable, 'restrictionother'),
			totalnetavwithrestriction	: util.sum(taxable, 'totalnetavwithrestriction'),
			collectiblebasic			: util.sum(taxable, 'collectiblebasic'),
			collectiblesef				: util.sum(taxable, 'collectiblesef'),
		])

		taxable.each{it->
			taxableinfo.add(it)
		}

		taxableinfo.add([
			name						: 'EXEMPT',
			noofrpus					: null,
			landareasqm					: null,
			totallandmv					: null,
			totalbldgmvgt175			: null,
			totalbldgmvlt175			: null,
			totalmachmv					: null,
			totalothermv				: null,
			totalmv						: null,
			totallandav					: null,
			totalbldgav					: null,
			totalmachav					: null,
			totalotherav				: null,
			totalav						: null,
			restrictioncarp				: null,
			restrictionulitigation		: null,
			restrictionother			: null,
			totalnetavwithrestriction	: null,
			collectiblebasic			: null,
			collectiblesef				: null,
		])

		def exempt = em.getFormNo3Exempt(params)

		exempt.add([
			name						: 'TOTAL EXEMPT PROPERTIES',
			noofrpus					: util.sum(exempt, 'noofrpus'),
			landareasqm					: util.sum(exempt, 'landareasqm'),
			totallandmv					: util.sum(exempt, 'totallandmv'),
			totalbldgmvgt175			: util.sum(exempt, 'totalbldgmvgt175'),
			totalbldgmvlt175			: util.sum(exempt, 'totalbldgmvlt175'),
			totalmachmv					: util.sum(exempt, 'totalmachmv'),
			totalothermv				: util.sum(exempt, 'totalothermv'),
			totalmv						: util.sum(exempt, 'totalmv'),
			totallandav					: util.sum(exempt, 'totallandav'),
			totalbldgav					: util.sum(exempt, 'totalbldgav'),
			totalmachav					: util.sum(exempt, 'totalmachav'),
			totalotherav				: util.sum(exempt, 'totalotherav'),
			totalav						: util.sum(exempt, 'totalav'),
			restrictioncarp				: null,
			restrictionulitigation		: null,
			restrictionother			: null,
			totalnetavwithrestriction	: null,
			collectiblebasic			: null,
			collectiblesef				: null,
		])
		

		exempt.each{it->
			taxableinfo.add(it)
		}

		return [
			period 		: period,
			periodtype 	: periodtype,
			title 		: title,
			reportdata  : taxableinfo,
		]
	}


    

}
